//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Object that represents an end to end journey (see schematic). */
public class Journey: APIModel {

    public var arrivalDateTime: DateTime?

    public var duration: Int?

    public var legs: [Leg]?

    public var startDateTime: DateTime?

    public init(arrivalDateTime: DateTime? = nil, duration: Int? = nil, legs: [Leg]? = nil, startDateTime: DateTime? = nil) {
        self.arrivalDateTime = arrivalDateTime
        self.duration = duration
        self.legs = legs
        self.startDateTime = startDateTime
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        arrivalDateTime = try container.decodeIfPresent("arrivalDateTime")
        duration = try container.decodeIfPresent("duration")
        legs = try container.decodeArrayIfPresent("legs")
        startDateTime = try container.decodeIfPresent("startDateTime")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(arrivalDateTime, forKey: "arrivalDateTime")
        try container.encodeIfPresent(duration, forKey: "duration")
        try container.encodeIfPresent(legs, forKey: "legs")
        try container.encodeIfPresent(startDateTime, forKey: "startDateTime")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Journey else { return false }
      guard self.arrivalDateTime == object.arrivalDateTime else { return false }
      guard self.duration == object.duration else { return false }
      guard self.legs == object.legs else { return false }
      guard self.startDateTime == object.startDateTime else { return false }
      return true
    }

    public static func == (lhs: Journey, rhs: Journey) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
