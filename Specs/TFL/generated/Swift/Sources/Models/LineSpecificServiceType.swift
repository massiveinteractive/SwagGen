//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class LineSpecificServiceType: APIModel {

    public var serviceType: LineServiceTypeInfo?

    public var stopServesServiceType: Bool?

    public init(serviceType: LineServiceTypeInfo? = nil, stopServesServiceType: Bool? = nil) {
        self.serviceType = serviceType
        self.stopServesServiceType = stopServesServiceType
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        serviceType = try container.decodeIfPresent("serviceType")
        stopServesServiceType = try container.decodeIfPresent("stopServesServiceType")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(serviceType, forKey: "serviceType")
        try container.encodeIfPresent(stopServesServiceType, forKey: "stopServesServiceType")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? LineSpecificServiceType else { return false }
      guard self.serviceType == object.serviceType else { return false }
      guard self.stopServesServiceType == object.stopServesServiceType else { return false }
      return true
    }

    public static func == (lhs: LineSpecificServiceType, rhs: LineSpecificServiceType) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
